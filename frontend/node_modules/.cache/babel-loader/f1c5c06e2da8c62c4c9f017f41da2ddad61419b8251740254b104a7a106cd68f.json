{"ast":null,"code":"var _jsxFileName = \"/Users/piyush.pandey/Documents/project/Temelio/temelio-frontend/src/component/SendEmail.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendEmail = () => {\n  _s();\n  const API_URL_ADD = 'http://localhost:8080/nonprofit/addFund';\n  const [id, setId] = useState(0);\n  const [fundAmount, setFundAmount] = useState(0);\n  const [emailContent, setEmailContent] = useState('');\n  const handleSubmit = () => {\n    const addFund = async () => {\n      try {\n        await fetch(API_URL_ADD, {\n          method: 'POST',\n          body: JSON.stringify({\n            'id': id,\n            'fund': fundAmount,\n            'emailContent': emailContent\n          }),\n          headers: {\n            'content-type': 'application/json'\n          }\n        });\n        handleClear();\n      } catch (e) {\n        console.error(e.stack);\n      }\n    };\n    if (id > 0 && fundAmount > 0 && emailContent !== '') {\n      addFund();\n    }\n  };\n  const handleClear = () => {\n    setId(0);\n    setFundAmount(0);\n    setEmailContent('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"send-email-main\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Non-profit id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Transfer amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setFundAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Compose Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => setEmailContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        onClick: handleClear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(SendEmail, \"DqueDfJW7fGCMMYrgFAjAx6UjUg=\");\n_c = SendEmail;\nexport default SendEmail;\nvar _c;\n$RefreshReg$(_c, \"SendEmail\");","map":{"version":3,"names":["SendEmail","_s","API_URL_ADD","id","setId","useState","fundAmount","setFundAmount","emailContent","setEmailContent","handleSubmit","addFund","fetch","method","body","JSON","stringify","headers","handleClear","e","console","error","stack","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/piyush.pandey/Documents/project/Temelio/temelio-frontend/src/component/SendEmail.js"],"sourcesContent":["const SendEmail = () => {\n    const API_URL_ADD = 'http://localhost:8080/nonprofit/addFund'\n\n    const [ id, setId ] = useState(0);\n    const [ fundAmount, setFundAmount ] = useState(0);\n    const [ emailContent, setEmailContent ] = useState('');\n\n    const handleSubmit = () => {\n        const addFund = async () => {\n            try {\n                await fetch(API_URL_ADD,\n                    {\n                        method: 'POST', \n                        body: JSON.stringify({\n                            'id': id,\n                            'fund': fundAmount,\n                            'emailContent': emailContent\n                        }),\n                        headers: {\n                            'content-type': 'application/json'\n                          }\n                    }\n                );\n                handleClear();\n            } catch (e) {\n                console.error(e.stack)\n            }\n        }\n        \n        if (id >0 && fundAmount > 0 && emailContent !== '') {\n            addFund();\n        }\n    }\n\n    const handleClear = () => {\n        setId(0);\n        setFundAmount(0);\n        setEmailContent('');\n    }\n\n    return (\n        <div className='send-email-main'>\n            <form>\n                <label>Non-profit id</label>\n                <input type='number' onChange={(e) => setId(e.target.value)}></input>\n                <label>Transfer amount</label>\n                <input type='number' onChange={(e) => setFundAmount(e.target.value)}></input>\n                <label>Compose Email</label>\n                <textarea onChange={(e) => setEmailContent(e.target.value)}></textarea>\n                <button type='submit' onClick={handleSubmit}>Submit</button>\n                <button type='reset' onClick={handleClear}>Clear</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SendEmail;"],"mappings":";;;AAAA,MAAMA,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,WAAW,GAAG,yCAAyC;EAE7D,MAAM,CAAEC,EAAE,EAAEC,KAAK,CAAE,GAAGC,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAAEC,UAAU,EAAEC,aAAa,CAAE,GAAGF,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAEG,YAAY,EAAEC,eAAe,CAAE,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAI;QACA,MAAMC,KAAK,CAACV,WAAW,EACnB;UACIW,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjB,IAAI,EAAEb,EAAE;YACR,MAAM,EAAEG,UAAU;YAClB,cAAc,EAAEE;UACpB,CAAC,CAAC;UACFS,OAAO,EAAE;YACL,cAAc,EAAE;UAClB;QACN,CACJ,CAAC;QACDC,WAAW,CAAC,CAAC;MACjB,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRC,OAAO,CAACC,KAAK,CAACF,CAAC,CAACG,KAAK,CAAC;MAC1B;IACJ,CAAC;IAED,IAAInB,EAAE,GAAE,CAAC,IAAIG,UAAU,GAAG,CAAC,IAAIE,YAAY,KAAK,EAAE,EAAE;MAChDG,OAAO,CAAC,CAAC;IACb;EACJ,CAAC;EAED,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACtBd,KAAK,CAAC,CAAC,CAAC;IACRG,aAAa,CAAC,CAAC,CAAC;IAChBE,eAAe,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,oBACIc,OAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5BF,OAAA;MAAAE,QAAA,gBACIF,OAAA;QAAAE,QAAA,EAAO;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5BN,OAAA;QAAOO,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAGZ,CAAC,IAAKf,KAAK,CAACe,CAAC,CAACa,MAAM,CAACC,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrEN,OAAA;QAAAE,QAAA,EAAO;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9BN,OAAA;QAAOO,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAGZ,CAAC,IAAKZ,aAAa,CAACY,CAAC,CAACa,MAAM,CAACC,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7EN,OAAA;QAAAE,QAAA,EAAO;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5BN,OAAA;QAAUQ,QAAQ,EAAGZ,CAAC,IAAKV,eAAe,CAACU,CAAC,CAACa,MAAM,CAACC,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eACvEN,OAAA;QAAQO,IAAI,EAAC,QAAQ;QAACI,OAAO,EAAExB,YAAa;QAAAe,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5DN,OAAA;QAAQO,IAAI,EAAC,OAAO;QAACI,OAAO,EAAEhB,WAAY;QAAAO,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAA5B,EAAA,CAtDKD,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAwDf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}