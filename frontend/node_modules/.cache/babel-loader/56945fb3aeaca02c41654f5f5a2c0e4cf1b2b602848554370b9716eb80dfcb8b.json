{"ast":null,"code":"var _jsxFileName = \"/Users/piyush.pandey/Documents/project/Temelio/temelio-frontend/src/component/SendEmail.js\",\n  _s = $RefreshSig$();\nimport '../style/SendEmail.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendEmail = () => {\n  _s();\n  const API_URL_ADD = 'http://localhost:8080/nonprofit/addFund';\n  const [id, setId] = useState(0);\n  const [fundAmount, setFundAmount] = useState(0);\n  const [emailContent, setEmailContent] = useState('');\n  const handleSubmit = () => {\n    const addFund = async () => {\n      try {\n        console.log(id);\n        console.log(typeof id);\n        console.log(fundAmount);\n        console.log(typeof fundAmount);\n        await fetch(API_URL_ADD, {\n          method: 'POST',\n          body: JSON.stringify({\n            'id': id,\n            'fund': fundAmount,\n            'emailContent': emailContent\n          }),\n          headers: {\n            'content-type': 'application/json'\n          }\n        });\n        handleClear();\n      } catch (e) {\n        console.error(e.stack);\n      }\n    };\n    if (id > 0 && fundAmount > 0 && emailContent !== '') {\n      addFund();\n    }\n  };\n  const handleClear = () => {\n    setId(0);\n    setFundAmount(0);\n    setEmailContent('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"send-email-main\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Non-profit id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setId(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Transfer amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setFundAmount(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Compose Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => setEmailContent(e.target.value),\n        placeholder: \"Use $name$ for name of non-profit\\\\n$email$ for email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        onClick: handleClear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(SendEmail, \"DqueDfJW7fGCMMYrgFAjAx6UjUg=\");\n_c = SendEmail;\nexport default SendEmail;\nvar _c;\n$RefreshReg$(_c, \"SendEmail\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SendEmail","_s","API_URL_ADD","id","setId","fundAmount","setFundAmount","emailContent","setEmailContent","handleSubmit","addFund","console","log","fetch","method","body","JSON","stringify","headers","handleClear","e","error","stack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","parseInt","target","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/piyush.pandey/Documents/project/Temelio/temelio-frontend/src/component/SendEmail.js"],"sourcesContent":["import '../style/SendEmail.css'\nimport { useState } from \"react\";\n\nconst SendEmail = () => {\n    const API_URL_ADD = 'http://localhost:8080/nonprofit/addFund'\n\n    const [ id, setId ] = useState(0);\n    const [ fundAmount, setFundAmount ] = useState(0);\n    const [ emailContent, setEmailContent ] = useState('');\n\n    const handleSubmit = () => {\n        const addFund = async () => {\n            try {\n                console.log(id);\n                console.log(typeof(id));\n                console.log(fundAmount);\n                console.log(typeof(fundAmount));\n\n                await fetch(API_URL_ADD,\n                    {\n                        method: 'POST', \n                        body: JSON.stringify({\n                            'id': id,\n                            'fund': fundAmount,\n                            'emailContent': emailContent\n                        }),\n                        headers: {\n                            'content-type': 'application/json'\n                          }\n                    }\n                );\n                handleClear();\n            } catch (e) {\n                console.error(e.stack)\n            }\n        }\n        \n        if (id >0 && fundAmount > 0 && emailContent !== '') {\n            addFund();\n        }\n    }\n\n    const handleClear = () => {\n        setId(0);\n        setFundAmount(0);\n        setEmailContent('');\n    }\n\n    return (\n        <div className='send-email-main'>\n            <form>\n                <label>Non-profit id</label>\n                <input type='number' onChange={(e) => setId(parseInt(e.target.value))}></input>\n                <label>Transfer amount</label>\n                <input type='number' onChange={(e) => setFundAmount(parseInt(e.target.value))}></input>\n                <label>Compose Email</label>\n                <textarea \n                    onChange={(e) => setEmailContent(e.target.value)}\n                    placeholder='Use $name$ for name of non-profit\\n$email$ for email'\n                ></textarea>\n                <button type='submit' onClick={handleSubmit}>Submit</button>\n                <button type='reset' onClick={handleClear}>Clear</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SendEmail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}